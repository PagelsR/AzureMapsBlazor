# This is a basic workflow to help you get started with Actions

name: CICD

# Controls when the workflow will run
on:
  push:
    branches:
      - "main"

  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '16.x'                # set this to the node version to use
  Azure_Resource_GroupName: 'rg-MercuryHealth-Ceruleoscope'
  Azure_Resource_GroupLocation: 'eastus2'
  
permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: npm install, build, and test
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        npm install
        npm install playwright
        npm install playwright-chromium
        npm install @playwright/test
        npm install ceruleoscope
        npm run build --if-present
        npm run test --if-present
    # - name: Upload artifact for deployment job
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: node-app
    #     path: .

    - name: Upload Build Artifacts
      if: ${{ github.event_name != 'pull_request' }}
      uses: actions/upload-artifact@v3
      with:
        name: PlaywrightTest
        path: ${{ github.workspace }}/PlaywrightTest

    - name: Upload Infrastucture Files
      if: ${{ github.event_name != 'pull_request' }}
      uses: actions/upload-artifact@v3
      with:
        name: IaC
        path: ${{ github.workspace }}/IaC/*.*

  deploy_infrastructure:
    runs-on: ubuntu-latest
    needs: build
    outputs:
      output_functionAppName: ${{ steps.Infra.outputs.out_functionAppName }}
      
    steps:
    - name: Login to Azure
      uses: azure/login@v1
      continue-on-error: false
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Ensure Resource Group Exists
      uses: Azure/CLI@v1
      continue-on-error: true
      with:
        inlineScript: |
          #!/bin/bash
          az group create --name ${{ env.Azure_Resource_GroupName }} --location ${{ env.Azure_Resource_GroupLocation }}
    - name: Ensure Resource Group is UnLocked
      #if: contains(github.event_name, 'push')
      uses: Azure/CLI@v1
      continue-on-error: true
      with:
        inlineScript: |
          az group lock delete --name DontDeleteMe --resource-group ${{ env.Azure_Resource_GroupName }}
    - name: Download Build Artifact-Infrastructure
      uses: actions/download-artifact@v2
      continue-on-error: false
      with:
        name: IaC
        path: ${{ github.workspace }}/IaC

    # - name: Install Bicep
    #   run: |
    #     curl -Lo bicep https://github.com/Azure/bicep/releases/latest/download/bicep-linux-x64
    #     chmod +x ./bicep
    #     sudo mv ./bicep /usr/local/bin/bicep
    #     bicep --version

    - name: Deploy Infrastructure
      id: Infra
      uses: azure/arm-deploy@v1
      continue-on-error: false
      with:
        resourceGroupName: ${{ env.Azure_Resource_GroupName }}
        template: ./IaC/main-1.bicep
        #parameters: ./IaC/main-1.params.json Deployed_Environment=${{ env.Deployed_Environment }}
        deploymentMode: Incremental
        failOnStdErr: false

    - name: Ensure Resource Group is Locked
      #if: contains(github.event_name, 'push')
      uses: Azure/CLI@v1
      continue-on-error: true
      with:
        inlineScript: |
          az group lock create --lock-type CanNotDelete --name DontDeleteMe --resource-group ${{ env.Azure_Resource_GroupName }} --notes 'Prevent deletion of the resource group'
  deploy_app:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: deploy_infrastructure
    environment:
      name: 'Development'
      url: ${{ steps.deploy_infrastructure.outputs.output_functionAppName }}

    steps:
    # - name: Download artifact from build job
    #   uses: actions/download-artifact@v3
    #   with:
    #     name: node-app

    - name: Login to Azure
      uses: azure/login@v1
      continue-on-error: false
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Ensure Resource Group is UnLocked
      #if: contains(github.event_name, 'push')
      uses: Azure/CLI@v1
      continue-on-error: true
      with:
        inlineScript: |
          az group lock delete --name DontDeleteMe --resource-group ${{ env.Azure_Resource_GroupName }}
    - name: Download Build Artifacts-Function Application
      uses: actions/download-artifact@v3
      continue-on-error: false
      with:
        name: PlaywrightTest
        path: ${{ github.workspace }}/PlaywrightTest

    # Deploy Function Application
    - name: 'Deploy Function Application'
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ needs.deploy_infrastructure.outputs.output_functionAppName }}
        #slot-name: 'production'
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
        
#    - name: 'Deploy to Azure WebApp'
#      id: deploy-to-webapp 
#      uses: azure/webapps-deploy@v2
#      with:
#        app-name: ${{ env.AZURE_WEBAPP_NAME }}
#        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
#        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

    - name: Ensure Resource Group is Locked
      #if: contains(github.event_name, 'push')
      uses: Azure/CLI@v1
      continue-on-error: true
      with:
        inlineScript: |
          az group lock create --lock-type CanNotDelete --name DontDeleteMe --resource-group ${{ env.Azure_Resource_GroupName }} --notes 'Prevent deletion of the resource group'
          
